/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SubfluidFollowModule,
  SubfluidFollowModuleInterface,
} from "../SubfluidFollowModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "contract ISuperfluid",
        name: "_superfluid",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_dai",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "_daix",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SubfluidFollow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscribeRate",
        type: "uint256",
      },
    ],
    name: "SubfluidFollowInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAIx",
    outputs: [
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPERFLUID",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "followModuleTransferHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeFollowModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "isFollowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processFollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610a3b380380610a3b833981016040819052610030916100d1565b836001600160a01b038116610058576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a2506001600160a01b0392831660a05290821660e0521660c05250610130565b6001600160a01b03811681146100ce57600080fd5b50565b600080600080608085870312156100e757600080fd5b84516100f2816100b9565b6020860151909450610103816100b9565b6040860151909350610114816100b9565b6060860151909250610125816100b9565b939692955090935050565b60805160a05160c05160e0516108b76101846000396000818161018401526101e501526000818161015d0152610413015260008181609701526103ec015260008181610136015261030e01526108b76000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630e096ae11461007d578063373ce258146100925780633cb22cc4146100d6578063451c3d0c146100ea5780639713958a14610111578063a4c52b8614610131578063af51addc14610158578063e0bab4c41461017f575b600080fd5b61009061008b366004610570565b6101a6565b005b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100906100e43660046105c9565b50505050565b6101016100f836600461060d565b60009392505050565b60405190151581526020016100cd565b61012461011f366004610642565b610301565b6040516100cd91906106e5565b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b600083815260208190526040908190205490516323b872dd60e01b81526001600160a01b038681166004830152306024830181905260448301939093527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af115801561022e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025291906106ff565b61029d5760405162461bcd60e51b815260206004820152601860248201527714d55091931552510e88141056535153950811905253115160421b604482015260640160405180910390fd5b6102ba8582600080888152602001908152602001600020546103e2565b806001600160a01b0316856001600160a01b03167f39825bf306062049f90beca0460fbd00a8159a8da32052600c37f71e37e6b8cb60405160405180910390a35050505050565b6060336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461034c576040516313bd2e8360e31b815260040160405180910390fd5b600061035a83850185610721565b60008681526020818152604091829020839055905182815291925086917fe2b8263803f29a3e2448d173ba81e0dee5e3d52fa34a3a06242f59f7c5fe8d9b910160405180910390a283838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509298975050505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166339255d5b7f00000000000000000000000000000000000000000000000000000000000000006394229ecb60e01b8187878760006040519080825280601f01601f19166020018201604052801561046a576020820181803683370190505b5060405160240161047f959493929190610750565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b90921682526104c59291600401610799565b6000604051808303816000875af11580156104e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100e491908101906107e0565b80356001600160a01b038116811461052357600080fd5b919050565b60008083601f84011261053a57600080fd5b5081356001600160401b0381111561055157600080fd5b60208301915083602082850101111561056957600080fd5b9250929050565b6000806000806060858703121561058657600080fd5b61058f8561050c565b93506020850135925060408501356001600160401b038111156105b157600080fd5b6105bd87828801610528565b95989497509550505050565b600080600080608085870312156105df57600080fd5b843593506105ef6020860161050c565b92506105fd6040860161050c565b9396929550929360600135925050565b60008060006060848603121561062257600080fd5b833592506106326020850161050c565b9150604084013590509250925092565b60008060006040848603121561065757600080fd5b8335925060208401356001600160401b0381111561067457600080fd5b61068086828701610528565b9497909650939450505050565b60005b838110156106a8578181015183820152602001610690565b838111156100e45750506000910152565b600081518084526106d181602086016020860161068d565b601f01601f19169290920160200192915050565b6020815260006106f860208301846106b9565b9392505050565b60006020828403121561071157600080fd5b815180151581146106f857600080fd5b60006020828403121561073357600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038681168252858116602083015284166040820152600b83900b606082015260a06080820181905260009061078e908301846106b9565b979650505050505050565b6001600160a01b03831681526060602082018190526000906107bd908301846106b9565b8281036040938401526002815261060f60f31b6020820152919091019392505050565b6000602082840312156107f257600080fd5b81516001600160401b038082111561080957600080fd5b818401915084601f83011261081d57600080fd5b81518181111561082f5761082f61073a565b604051601f8201601f19908116603f011681019083821181831017156108575761085761073a565b8160405282815287602084870101111561087057600080fd5b61078e83602083016020880161068d56fea2646970667358221220bfa515d7b3b86e3aebb775eca122b0a15ac6c2e632e9d20173d0e9f0db995b2f64736f6c634300080a0033";

type SubfluidFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubfluidFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubfluidFollowModule__factory extends ContractFactory {
  constructor(...args: SubfluidFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SubfluidFollowModule";
  }

  deploy(
    hub: string,
    _superfluid: string,
    _dai: string,
    _daix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SubfluidFollowModule> {
    return super.deploy(
      hub,
      _superfluid,
      _dai,
      _daix,
      overrides || {}
    ) as Promise<SubfluidFollowModule>;
  }
  getDeployTransaction(
    hub: string,
    _superfluid: string,
    _dai: string,
    _daix: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      hub,
      _superfluid,
      _dai,
      _daix,
      overrides || {}
    );
  }
  attach(address: string): SubfluidFollowModule {
    return super.attach(address) as SubfluidFollowModule;
  }
  connect(signer: Signer): SubfluidFollowModule__factory {
    return super.connect(signer) as SubfluidFollowModule__factory;
  }
  static readonly contractName: "SubfluidFollowModule";
  public readonly contractName: "SubfluidFollowModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubfluidFollowModuleInterface {
    return new utils.Interface(_abi) as SubfluidFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubfluidFollowModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SubfluidFollowModule;
  }
}

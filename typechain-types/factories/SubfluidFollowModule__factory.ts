/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SubfluidFollowModule,
  SubfluidFollowModuleInterface,
} from "../SubfluidFollowModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_lensHub",
        type: "address",
      },
      {
        internalType: "contract ISuperfluid",
        name: "_superfluid",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "_dai",
        type: "address",
      },
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "_daix",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_testMode",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SubfluidFollow",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipientAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subscribeRate",
        type: "uint256",
      },
    ],
    name: "SubfluidFollowInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAIx",
    outputs: [
      {
        internalType: "contract IConstantFlowAgreementV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUPERFLUID",
    outputs: [
      {
        internalType: "contract ISuperfluid",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "followModuleTransferHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeFollowModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "isFollowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processFollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b506040516109f53803806109f5833981016040819052610030916100ff565b846001600160a01b038116610058576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a2506001600160a01b0393841660a05291831660e052821660c052600080546001600160a81b031916911515610100600160a81b031916919091176101009390921692909202179055610179565b6001600160a01b03811681146100fc57600080fd5b50565b600080600080600060a0868803121561011757600080fd5b8551610122816100e7565b6020870151909550610133816100e7565b6040870151909450610144816100e7565b6060870151909350610155816100e7565b6080870151909250801515811461016b57600080fd5b809150509295509295909350565b60805160a05160c05160e0516108366101bf600039600061018401526000818161015d0152610398015260008181609701526103710152600061013601526108366000f3fe608060405234801561001057600080fd5b50600436106100785760003560e01c80630e096ae11461007d578063373ce258146100925780633cb22cc4146100d6578063451c3d0c146100ea5780639713958a14610111578063a4c52b8614610131578063af51addc14610158578063e0bab4c41461017f575b600080fd5b61009061008b3660046104f1565b6101a6565b005b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100906100e436600461054c565b50505050565b6101016100f8366004610594565b60009392505050565b60405190151581526020016100cd565b61012461011f3660046105cc565b610226565b6040516100cd919061066f565b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6100b97f000000000000000000000000000000000000000000000000000000000000000081565b6000838152600160205260409020546101d49085906001600160a01b03600160601b82041690600b0b610367565b6000838152600160205260408082205490516001600160a01b03600160601b909204821692918716917f39825bf306062049f90beca0460fbd00a8159a8da32052600c37f71e37e6b8cb91a350505050565b60005460609060ff1661028f5760005461010090046001600160a01b0316331461028f5760405162461bcd60e51b815260206004820152601660248201527529aaa123262aa4a21d102727aa102622a72990242aa160511b604482015260640160405180910390fd5b60008061029e84860186610689565b604080518082018252600b84900b81526001600160a01b03838116602080840182815260008e81526001835286902094519051909316600160601b026001600160601b03909316929092179092559151848152939550919350909188917fb63c2526c17499eadaaecce8696637699372924a808269f2e96549f76376aa49910160405180910390a384848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929998505050505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166339255d5b7f00000000000000000000000000000000000000000000000000000000000000006394229ecb60e01b8187878760006040519080825280601f01601f1916602001820160405280156103ef576020820181803683370190505b506040516024016104049594939291906106cf565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e085901b909216825261044a9291600401610718565b6000604051808303816000875af1158015610469573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526100e4919081019061075f565b6001600160a01b03811681146104a657600080fd5b50565b60008083601f8401126104bb57600080fd5b5081356001600160401b038111156104d257600080fd5b6020830191508360208285010111156104ea57600080fd5b9250929050565b6000806000806060858703121561050757600080fd5b843561051281610491565b93506020850135925060408501356001600160401b0381111561053457600080fd5b610540878288016104a9565b95989497509550505050565b6000806000806080858703121561056257600080fd5b84359350602085013561057481610491565b9250604085013561058481610491565b9396929550929360600135925050565b6000806000606084860312156105a957600080fd5b8335925060208401356105bb81610491565b929592945050506040919091013590565b6000806000604084860312156105e157600080fd5b8335925060208401356001600160401b038111156105fe57600080fd5b61060a868287016104a9565b9497909650939450505050565b60005b8381101561063257818101518382015260200161061a565b838111156100e45750506000910152565b6000815180845261065b816020860160208601610617565b601f01601f19169290920160200192915050565b6020815260006106826020830184610643565b9392505050565b6000806040838503121561069c57600080fd5b8235915060208301356106ae81610491565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038681168252858116602083015284166040820152600b83900b606082015260a06080820181905260009061070d90830184610643565b979650505050505050565b6001600160a01b038316815260606020820181905260009061073c90830184610643565b8281036040938401526002815261060f60f31b6020820152919091019392505050565b60006020828403121561077157600080fd5b81516001600160401b038082111561078857600080fd5b818401915084601f83011261079c57600080fd5b8151818111156107ae576107ae6106b9565b604051601f8201601f19908116603f011681019083821181831017156107d6576107d66106b9565b816040528281528760208487010111156107ef57600080fd5b61070d83602083016020880161061756fea26469706673582212208e0dfd179baef0abaa44da2c337e59c9175f9d69c12669a9a5ce77559197b27364736f6c634300080a0033";

type SubfluidFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubfluidFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubfluidFollowModule__factory extends ContractFactory {
  constructor(...args: SubfluidFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SubfluidFollowModule";
  }

  deploy(
    _lensHub: string,
    _superfluid: string,
    _dai: string,
    _daix: string,
    _testMode: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SubfluidFollowModule> {
    return super.deploy(
      _lensHub,
      _superfluid,
      _dai,
      _daix,
      _testMode,
      overrides || {}
    ) as Promise<SubfluidFollowModule>;
  }
  getDeployTransaction(
    _lensHub: string,
    _superfluid: string,
    _dai: string,
    _daix: string,
    _testMode: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _lensHub,
      _superfluid,
      _dai,
      _daix,
      _testMode,
      overrides || {}
    );
  }
  attach(address: string): SubfluidFollowModule {
    return super.attach(address) as SubfluidFollowModule;
  }
  connect(signer: Signer): SubfluidFollowModule__factory {
    return super.connect(signer) as SubfluidFollowModule__factory;
  }
  static readonly contractName: "SubfluidFollowModule";
  public readonly contractName: "SubfluidFollowModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubfluidFollowModuleInterface {
    return new utils.Interface(_abi) as SubfluidFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubfluidFollowModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SubfluidFollowModule;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SubfluidFollowModule,
  SubfluidFollowModuleInterface,
} from "../SubfluidFollowModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "followModuleTransferHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeFollowModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "isFollowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processFollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102e1806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630e096ae1146100515780633cb22cc414610067578063451c3d0c146100755780639713958a146100a1575b600080fd5b61006561005f366004610137565b50505050565b005b61006561005f366004610191565b61008c6100833660046101d5565b60009392505050565b60405190151581526020015b60405180910390f35b6100b86100af36600461020a565b60609392505050565b6040516100989190610256565b803573ffffffffffffffffffffffffffffffffffffffff811681146100e957600080fd5b919050565b60008083601f84011261010057600080fd5b50813567ffffffffffffffff81111561011857600080fd5b60208301915083602082850101111561013057600080fd5b9250929050565b6000806000806060858703121561014d57600080fd5b610156856100c5565b935060208501359250604085013567ffffffffffffffff81111561017957600080fd5b610185878288016100ee565b95989497509550505050565b600080600080608085870312156101a757600080fd5b843593506101b7602086016100c5565b92506101c5604086016100c5565b9396929550929360600135925050565b6000806000606084860312156101ea57600080fd5b833592506101fa602085016100c5565b9150604084013590509250925092565b60008060006040848603121561021f57600080fd5b83359250602084013567ffffffffffffffff81111561023d57600080fd5b610249868287016100ee565b9497909650939450505050565b600060208083528351808285015260005b8181101561028357858101830151858201604001528201610267565b81811115610295576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212202c8da63451d640684997b585c3fe714835e50c5a8582e72a8550f267ca476c5164736f6c634300080a0033";

type SubfluidFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubfluidFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubfluidFollowModule__factory extends ContractFactory {
  constructor(...args: SubfluidFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "SubfluidFollowModule";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SubfluidFollowModule> {
    return super.deploy(overrides || {}) as Promise<SubfluidFollowModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SubfluidFollowModule {
    return super.attach(address) as SubfluidFollowModule;
  }
  connect(signer: Signer): SubfluidFollowModule__factory {
    return super.connect(signer) as SubfluidFollowModule__factory;
  }
  static readonly contractName: "SubfluidFollowModule";
  public readonly contractName: "SubfluidFollowModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubfluidFollowModuleInterface {
    return new utils.Interface(_abi) as SubfluidFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubfluidFollowModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SubfluidFollowModule;
  }
}

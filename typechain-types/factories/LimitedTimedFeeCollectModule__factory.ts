/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LimitedTimedFeeCollectModule,
  LimitedTimedFeeCollectModuleInterface,
} from "../LimitedTimedFeeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleGlobals",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "CollectExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "ModuleDataMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_GLOBALS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
    ],
    name: "getPublicationData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "collectLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentCollects",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "referralFee",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "followerOnly",
            type: "bool",
          },
          {
            internalType: "uint40",
            name: "endTimestamp",
            type: "uint40",
          },
        ],
        internalType: "struct ProfilePublicationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "referrerProfileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620017b0380380620017b0833981016040819052620000349162000131565b81816001600160a01b0381166200005e576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527f4e84a529f4c627b5e787037d117873af1018768804cca3c7f0d47041fe2c89ed9060200160405180910390a2506001600160a01b038116620000c9576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660a08190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250505062000169565b80516001600160a01b03811681146200012c57600080fd5b919050565b600080604083850312156200014557600080fd5b620001508362000114565b9150620001606020840162000114565b90509250929050565b60805160a0516115e9620001c7600039600081816101ae015281816102120152818161052a01528181610792015281816108e201528181610a090152610cb901526000818161016f015281816106ed0152610e1501526115e96000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063a4c52b8611610050578063a4c52b86146101a9578063c233f951146101d0578063e49c3dda146101f057600080fd5b80633f5038921461006c57806388ffe8511461016a575b600080fd5b61015461007a366004611196565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915250600091825260208281526040808420928452918152918190208151610100810183528154815260018201549381019390935260028101549183019190915260038101546001600160a01b0390811660608401526004909101549081166080830152600160a01b810461ffff1660a0830152600160b01b810460ff16151560c0830152600160b81b900464ffffffffff1660e082015290565b60405161016191906111b8565b60405180910390f35b6101917f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610161565b6101917f000000000000000000000000000000000000000000000000000000000000000081565b6101e36101de36600461127e565b610205565b6040516101619190611329565b6102036101fe366004611354565b61051f565b005b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610250576040516313bd2e8360e31b815260040160405180910390fd5b42620151800160008080808080610269898b018b6113e5565b955095509550955095509550856000148061028a5750610288846106b2565b155b8061029c57506001600160a01b038316155b806102ac575061271061ffff8316115b806102b5575084155b156102ec576040517f48be0eb300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b856000808e815260200190815260200160002060008d815260200190815260200160002060000181905550846000808e815260200190815260200160002060008d815260200190815260200160002060020181905550836000808e815260200190815260200160002060008d815260200190815260200160002060030160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826000808e815260200190815260200160002060008d815260200190815260200160002060040160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816000808e815260200190815260200160002060008d815260200190815260200160002060040160146101000a81548161ffff021916908361ffff160217905550806000808e815260200190815260200160002060008d815260200190815260200160002060040160166101000a81548160ff021916908315150217905550866000808e815260200190815260200160002060008d815260200190815260200160002060040160176101000a81548164ffffffffff021916908364ffffffffff1602179055508585858585858c6040516020016104ff979695949392919096875260208701959095526001600160a01b03938416604087015291909216606085015261ffff919091166080840152151560a083015264ffffffffff1660c082015260e00190565b604051602081830303815290604052975050505050505050949350505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610568576040516313bd2e8360e31b815260040160405180910390fd5b600084815260208181526040808320868452909152902060040154600160b01b900460ff161561059c5761059c8486610760565b600084815260208181526040808320868452909152902060040154600160b81b900464ffffffffff16428110156105ff576040517f99ae072000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858152602081815260408083208784529091529020805460019091015410610655576040517fb643bfa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000858152602081815260408083208784529091528120600101805490919061067d9061146b565b909155508685141561069b576106968686868686610adf565b6106a9565b6106a9878787878787610bb7565b50505050505050565b6040517f43b938c50000000000000000000000000000000000000000000000000000000081526001600160a01b0382811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906343b938c590602401602060405180830381865afa158015610736573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075a9190611486565b92915050565b6040517fd923d20c000000000000000000000000000000000000000000000000000000008152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d923d20c90602401602060405180830381865afa1580156107e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080591906114a3565b905060006001600160a01b038216156108b0576040517f451c3d0c000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b0384811660248301526000604483015283169063451c3d0c90606401602060405180830381865afa158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a99190611486565b90506109f4565b6040517fa9ec6563000000000000000000000000000000000000000000000000000000008152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa158015610931573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095591906114a3565b90506001600160a01b038116158015906109f057506040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528216906370a0823190602401602060405180830381865afa1580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ed91906114c0565b15155b9150505b80158015610aa25750826001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e866040518263ffffffff1660e01b8152600401610a5591815260200190565b602060405180830381865afa158015610a72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9691906114a3565b6001600160a01b031614155b15610ad9576040517fd325a6d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b600084815260208181526040808320868452909152902060028101546003909101546001600160a01b0316610b1684848385610d9d565b600080610b21610e10565b60008a8152602081815260408083208c84529091528120600401549294509092506001600160a01b0390911690612710610b5f61ffff8516886114d9565b610b6991906114f8565b90506000610b77828861151a565b9050610b8e6001600160a01b0387168d8584610e9c565b8115610ba957610ba96001600160a01b0387168d8785610e9c565b505050505050505050505050565b600084815260208181526040808320868452909152902060028101546003909101546001600160a01b0316610bee84848385610d9d565b600086815260208181526040808320888452909152812060040154600160a01b900461ffff16908080610c1f610e10565b9093509050612710610c3561ffff8316886114d9565b610c3f91906114f8565b915060009050610c4f828761151a565b90508315610d3e576000612710610c6686846114d9565b610c7091906114f8565b9050610c7c818361151a565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018f90529092506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906114a3565b9050610d3b6001600160a01b0388168e8385610e9c565b50505b60008a8152602081815260408083208c84529091529020600401546001600160a01b0390811690610d739087168d8385610e9c565b8215610d8e57610d8e6001600160a01b0387168d8686610e9c565b50505050505050505050505050565b600080610dac85870187611531565b915091508281141580610dd15750836001600160a01b0316826001600160a01b031614155b15610e08576040517f46308bd500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398f965d16040518163ffffffff1660e01b81526004016040805180830381865afa158015610e70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e94919061155d565b915091509091565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656490840152610ad992879291600091610f62918516908490610ffc565b805190915015610ff75780806020019051810190610f809190611486565b610ff75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b606061100b8484600085611015565b90505b9392505050565b60608247101561108d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610fee565b6001600160a01b0385163b6110e45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610fee565b600080866001600160a01b031685876040516111009190611597565b60006040518083038185875af1925050503d806000811461113d576040519150601f19603f3d011682016040523d82523d6000602084013e611142565b606091505b509150915061115282828661115d565b979650505050505050565b6060831561116c57508161100e565b82511561117c5782518084602001fd5b8160405162461bcd60e51b8152600401610fee9190611329565b600080604083850312156111a957600080fd5b50508035926020909101359150565b60006101008201905082518252602083015160208301526040830151604083015260608301516001600160a01b038082166060850152806080860151166080850152505061ffff60a08401511660a083015260c0830151151560c083015260e083015161122e60e084018264ffffffffff169052565b5092915050565b60008083601f84011261124757600080fd5b50813567ffffffffffffffff81111561125f57600080fd5b60208301915083602082850101111561127757600080fd5b9250929050565b6000806000806060858703121561129457600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156112b957600080fd5b6112c587828801611235565b95989497509550505050565b60005b838110156112ec5781810151838201526020016112d4565b83811115610ad95750506000910152565b600081518084526113158160208601602086016112d1565b601f01601f19169290920160200192915050565b60208152600061100e60208301846112fd565b6001600160a01b038116811461135157600080fd5b50565b60008060008060008060a0878903121561136d57600080fd5b86359550602087013561137f8161133c565b94506040870135935060608701359250608087013567ffffffffffffffff8111156113a957600080fd5b6113b589828a01611235565b979a9699509497509295939492505050565b61ffff8116811461135157600080fd5b801515811461135157600080fd5b60008060008060008060c087890312156113fe57600080fd5b863595506020870135945060408701356114178161133c565b935060608701356114278161133c565b92506080870135611437816113c7565b915060a0870135611447816113d7565b809150509295509295509295565b634e487b7160e01b600052601160045260246000fd5b600060001982141561147f5761147f611455565b5060010190565b60006020828403121561149857600080fd5b815161100e816113d7565b6000602082840312156114b557600080fd5b815161100e8161133c565b6000602082840312156114d257600080fd5b5051919050565b60008160001904831182151516156114f3576114f3611455565b500290565b60008261151557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561152c5761152c611455565b500390565b6000806040838503121561154457600080fd5b823561154f8161133c565b946020939093013593505050565b6000806040838503121561157057600080fd5b825161157b8161133c565b602084015190925061158c816113c7565b809150509250929050565b600082516115a98184602087016112d1565b919091019291505056fea264697066735822122014c168a548a40fb7f8288224c6fe23ebbbf43ee0de4f6bb050343953a3e5f4ad64736f6c634300080a0033";

type LimitedTimedFeeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LimitedTimedFeeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LimitedTimedFeeCollectModule__factory extends ContractFactory {
  constructor(...args: LimitedTimedFeeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "LimitedTimedFeeCollectModule";
  }

  deploy(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LimitedTimedFeeCollectModule> {
    return super.deploy(
      hub,
      moduleGlobals,
      overrides || {}
    ) as Promise<LimitedTimedFeeCollectModule>;
  }
  getDeployTransaction(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, moduleGlobals, overrides || {});
  }
  attach(address: string): LimitedTimedFeeCollectModule {
    return super.attach(address) as LimitedTimedFeeCollectModule;
  }
  connect(signer: Signer): LimitedTimedFeeCollectModule__factory {
    return super.connect(signer) as LimitedTimedFeeCollectModule__factory;
  }
  static readonly contractName: "LimitedTimedFeeCollectModule";
  public readonly contractName: "LimitedTimedFeeCollectModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LimitedTimedFeeCollectModuleInterface {
    return new utils.Interface(_abi) as LimitedTimedFeeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LimitedTimedFeeCollectModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LimitedTimedFeeCollectModule;
  }
}

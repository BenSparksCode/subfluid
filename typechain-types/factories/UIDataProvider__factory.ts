/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UIDataProvider,
  UIDataProviderInterface,
} from "../UIDataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ILensHub",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "handle",
        type: "string",
      },
    ],
    name: "getLatestDataByHandle",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pubCount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "followModule",
                type: "address",
              },
              {
                internalType: "address",
                name: "followNFT",
                type: "address",
              },
              {
                internalType: "string",
                name: "handle",
                type: "string",
              },
              {
                internalType: "string",
                name: "imageURI",
                type: "string",
              },
              {
                internalType: "string",
                name: "followNFTURI",
                type: "string",
              },
            ],
            internalType: "struct DataTypes.ProfileStruct",
            name: "profileStruct",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "profileIdPointed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pubIdPointed",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "contentURI",
                type: "string",
              },
              {
                internalType: "address",
                name: "referenceModule",
                type: "address",
              },
              {
                internalType: "address",
                name: "collectModule",
                type: "address",
              },
              {
                internalType: "address",
                name: "collectNFT",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.PublicationStruct",
            name: "publicationStruct",
            type: "tuple",
          },
        ],
        internalType: "struct LatestData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "getLatestDataByProfile",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "pubCount",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "followModule",
                type: "address",
              },
              {
                internalType: "address",
                name: "followNFT",
                type: "address",
              },
              {
                internalType: "string",
                name: "handle",
                type: "string",
              },
              {
                internalType: "string",
                name: "imageURI",
                type: "string",
              },
              {
                internalType: "string",
                name: "followNFTURI",
                type: "string",
              },
            ],
            internalType: "struct DataTypes.ProfileStruct",
            name: "profileStruct",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "profileIdPointed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "pubIdPointed",
                type: "uint256",
              },
              {
                internalType: "string",
                name: "contentURI",
                type: "string",
              },
              {
                internalType: "address",
                name: "referenceModule",
                type: "address",
              },
              {
                internalType: "address",
                name: "collectModule",
                type: "address",
              },
              {
                internalType: "address",
                name: "collectNFT",
                type: "address",
              },
            ],
            internalType: "struct DataTypes.PublicationStruct",
            name: "publicationStruct",
            type: "tuple",
          },
        ],
        internalType: "struct LatestData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516109e03803806109e083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161093a6100a660003960008181609901528181610133015281816101d6015281816102790152610324015261093a6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639d933d401461003b578063ed88bde414610064575b600080fd5b61004e6100493660046104c9565b610077565b60405161005b9190610606565b60405180910390f35b61004e6100723660046106bc565b610258565b61007f6103a5565b60405163107d394560e11b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906320fa728a906100ce9086906004016106d5565b602060405180830381865afa1580156100eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010f91906106ef565b604051633c23d3d960e21b8152600481018290529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f08f4f6490602401600060405180830381865afa15801561017a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a29190810190610771565b80516040805180820182528381529051630c736c9960e41b81526004810186905260248101839052929350909160208201907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c736c99090604401600060405180830381865afa158015610225573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261024d9190810190610851565b905295945050505050565b6102606103a5565b604051633c23d3d960e21b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063f08f4f6490602401600060405180830381865afa1580156102c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f09190810190610771565b80516040805180820182528381529051630c736c9960e41b81526004810187905260248101839052929350909160208201907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c736c99090604401600060405180830381865afa158015610373573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039b9190810190610851565b9052949350505050565b60405180604001604052806103fb6040518060c001604052806000815260200160006001600160a01b0316815260200160006001600160a01b031681526020016060815260200160608152602001606081525090565b81526040805160c0810182526000808252602082810182905260609383018490529282018190526080820181905260a082015291015290565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b038111828210171561046c5761046c610434565b60405290565b604051601f8201601f191681016001600160401b038111828210171561049a5761049a610434565b604052919050565b60006001600160401b038211156104bb576104bb610434565b50601f01601f191660200190565b6000602082840312156104db57600080fd5b81356001600160401b038111156104f157600080fd5b8201601f8101841361050257600080fd5b8035610515610510826104a2565b610472565b81815285602083850101111561052a57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561056357818101518382015260200161054b565b83811115610572576000848401525b50505050565b60008151808452610590816020860160208601610548565b601f01601f19169290920160200192915050565b80518252602081015160208301526000604082015160c060408501526105cd60c0850182610578565b6060848101516001600160a01b039081169187019190915260808086015182169087015260a09485015116949093019390935250919050565b60208152600082516040602084015280516060840152602081015160018060a01b0380821660808601528060408401511660a08601525050606081015160c080850152610657610120850182610578565b90506080820151605f19808684030160e08701526106758383610578565b925060a08401519350808684030161010087015250506106958183610578565b9150506020840151601f198483030160408501526106b382826105a4565b95945050505050565b6000602082840312156106ce57600080fd5b5035919050565b6020815260006106e86020830184610578565b9392505050565b60006020828403121561070157600080fd5b5051919050565b80516001600160a01b038116811461071f57600080fd5b919050565b600082601f83011261073557600080fd5b8151610743610510826104a2565b81815284602083860101111561075857600080fd5b610769826020830160208701610548565b949350505050565b60006020828403121561078357600080fd5b81516001600160401b038082111561079a57600080fd5b9083019060c082860312156107ae57600080fd5b6107b661044a565b825181526107c660208401610708565b60208201526107d760408401610708565b60408201526060830151828111156107ee57600080fd5b6107fa87828601610724565b60608301525060808301518281111561081257600080fd5b61081e87828601610724565b60808301525060a08301518281111561083657600080fd5b61084287828601610724565b60a08301525095945050505050565b60006020828403121561086357600080fd5b81516001600160401b038082111561087a57600080fd5b9083019060c0828603121561088e57600080fd5b61089661044a565b82518152602083015160208201526040830151828111156108b657600080fd5b6108c287828601610724565b6040830152506108d460608401610708565b60608201526108e560808401610708565b60808201526108f660a08401610708565b60a08201529594505050505056fea2646970667358221220c14ce729a28aa2695ba20c138f7707f649ea7ca2065292c0c043616d2e7a7eb164736f6c634300080a0033";

type UIDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UIDataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UIDataProvider__factory extends ContractFactory {
  constructor(...args: UIDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "UIDataProvider";
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UIDataProvider> {
    return super.deploy(hub, overrides || {}) as Promise<UIDataProvider>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): UIDataProvider {
    return super.attach(address) as UIDataProvider;
  }
  connect(signer: Signer): UIDataProvider__factory {
    return super.connect(signer) as UIDataProvider__factory;
  }
  static readonly contractName: "UIDataProvider";
  public readonly contractName: "UIDataProvider";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UIDataProviderInterface {
    return new utils.Interface(_abi) as UIDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UIDataProvider {
    return new Contract(address, _abi, signerOrProvider) as UIDataProvider;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Helper, HelperInterface } from "../Helper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IFollowNFT",
        name: "nft",
        type: "address",
      },
      {
        internalType: "address",
        name: "first",
        type: "address",
      },
      {
        internalType: "address",
        name: "second",
        type: "address",
      },
    ],
    name: "batchDelegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101d1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806342cbb15c1461003b578063ef2fbbc31461004e575b600080fd5b4360405190815260200160405180910390f35b61006161005c36600461013c565b610063565b005b6040516317066a5760e21b81526001600160a01b03841690635c19a95c9061008f908590600401610187565b600060405180830381600087803b1580156100a957600080fd5b505af11580156100bd573d6000803e3d6000fd5b50506040516317066a5760e21b81526001600160a01b0386169250635c19a95c91506100ed908490600401610187565b600060405180830381600087803b15801561010757600080fd5b505af115801561011b573d6000803e3d6000fd5b50505050505050565b6001600160a01b038116811461013957600080fd5b50565b60008060006060848603121561015157600080fd5b833561015c81610124565b9250602084013561016c81610124565b9150604084013561017c81610124565b809150509250925092565b6001600160a01b039190911681526020019056fea2646970667358221220763a997ce165df17c20b59203325a55605f7df0a01776b4fb05aea9ee704da8164736f6c634300080a0033";

type HelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Helper__factory extends ContractFactory {
  constructor(...args: HelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Helper";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Helper> {
    return super.deploy(overrides || {}) as Promise<Helper>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Helper {
    return super.attach(address) as Helper;
  }
  connect(signer: Signer): Helper__factory {
    return super.connect(signer) as Helper__factory;
  }
  static readonly contractName: "Helper";
  public readonly contractName: "Helper";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelperInterface {
    return new utils.Interface(_abi) as HelperInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Helper {
    return new Contract(address, _abi, signerOrProvider) as Helper;
  }
}

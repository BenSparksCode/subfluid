/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FreeCollectModule,
  FreeCollectModuleInterface,
} from "../FreeCollectModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializePublicationCollectModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "referrerProfileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "collector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processCollect",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161088a38038061088a83398101604081905261002f916100a0565b806001600160a01b038116610057576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250506100d0565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b60805161078561010560003960008181604b0152818160cc0152818161020101528181610351015261047801526107856000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a4c52b8614610046578063c233f9511461008a578063e49c3dda146100aa575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61009d610098366004610597565b6100bf565b60405161008191906105ea565b6100bd6100b8366004610657565b61019d565b005b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610123576040517f9de9741800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610131838501856106d8565b9050801561015c576000868152602081815260408083208884529091529020805460ff191660011790555b83838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929998505050505050505050565b60008481526020818152604080832086845290915290205460ff16156101c7576101c784866101cf565b505050505050565b6040517fd923d20c000000000000000000000000000000000000000000000000000000008152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d923d20c90602401602060405180830381865afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027491906106fc565b905060006001600160a01b0382161561031f576040517f451c3d0c000000000000000000000000000000000000000000000000000000008152600481018590526001600160a01b0384811660248301526000604483015283169063451c3d0c90606401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610719565b9050610463565b6040517fa9ec6563000000000000000000000000000000000000000000000000000000008152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa1580156103a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c491906106fc565b90506001600160a01b0381161580159061045f57506040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528216906370a0823190602401602060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610736565b15155b9150505b801580156105115750826001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636352211e866040518263ffffffff1660e01b81526004016104c491815260200190565b602060405180830381865afa1580156104e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050591906106fc565b6001600160a01b031614155b15610548576040517fd325a6d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b60008083601f84011261056057600080fd5b50813567ffffffffffffffff81111561057857600080fd5b60208301915083602082850101111561059057600080fd5b9250929050565b600080600080606085870312156105ad57600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156105d257600080fd5b6105de8782880161054e565b95989497509550505050565b600060208083528351808285015260005b81811015610617578581018301518582016040015282016105fb565b81811115610629576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461065457600080fd5b50565b60008060008060008060a0878903121561067057600080fd5b8635955060208701356106828161063f565b94506040870135935060608701359250608087013567ffffffffffffffff8111156106ac57600080fd5b6106b889828a0161054e565b979a9699509497509295939492505050565b801515811461065457600080fd5b6000602082840312156106ea57600080fd5b81356106f5816106ca565b9392505050565b60006020828403121561070e57600080fd5b81516106f58161063f565b60006020828403121561072b57600080fd5b81516106f5816106ca565b60006020828403121561074857600080fd5b505191905056fea2646970667358221220dcf2753fbff65fca64b832f79b0cfea6df0b2774998db442b9e30d80ccfc790064736f6c634300080a0033";

type FreeCollectModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FreeCollectModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FreeCollectModule__factory extends ContractFactory {
  constructor(...args: FreeCollectModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FreeCollectModule";
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FreeCollectModule> {
    return super.deploy(hub, overrides || {}) as Promise<FreeCollectModule>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): FreeCollectModule {
    return super.attach(address) as FreeCollectModule;
  }
  connect(signer: Signer): FreeCollectModule__factory {
    return super.connect(signer) as FreeCollectModule__factory;
  }
  static readonly contractName: "FreeCollectModule";
  public readonly contractName: "FreeCollectModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FreeCollectModuleInterface {
    return new utils.Interface(_abi) as FreeCollectModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FreeCollectModule {
    return new Contract(address, _abi, signerOrProvider) as FreeCollectModule;
  }
}

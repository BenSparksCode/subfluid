/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MockReferenceModule,
  MockReferenceModuleInterface,
} from "../MockReferenceModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeReferenceModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileIdPointed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubIdPointed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processComment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profileIdPointed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "pubIdPointed",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMirror",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806356014afa1461004657806357ba55841461006f578063a2830b2e1461006f575b600080fd5b61005961005436600461014c565b610086565b604051610066919061019e565b60405180910390f35b61008461007d3660046101f3565b5050505050565b005b6060600061009683850185610253565b9050806001146100eb5760405162461bcd60e51b815260206004820152601c60248201527b135bd8dad49959995c995b98d9535bd91d5b194e881a5b9d985b1a5960221b604482015260640160405180910390fd5b5050604080516000815260208101909152949350505050565b60008083601f84011261011657600080fd5b5081356001600160401b0381111561012d57600080fd5b60208301915083602082850101111561014557600080fd5b9250929050565b6000806000806060858703121561016257600080fd5b843593506020850135925060408501356001600160401b0381111561018657600080fd5b61019287828801610104565b95989497509550505050565b600060208083528351808285015260005b818110156101cb578581018301518582016040015282016101af565b818111156101dd576000604083870101525b50601f01601f1916929092016040019392505050565b60008060008060006080868803121561020b57600080fd5b85359450602086013593506040860135925060608601356001600160401b0381111561023657600080fd5b61024288828901610104565b969995985093965092949392505050565b60006020828403121561026557600080fd5b503591905056fea2646970667358221220955c9e9b4dba62443d98e35a7b188bbfb1a6b578faf7535a30891b81b5aeb96964736f6c634300080a0033";

type MockReferenceModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockReferenceModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockReferenceModule__factory extends ContractFactory {
  constructor(...args: MockReferenceModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockReferenceModule";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockReferenceModule> {
    return super.deploy(overrides || {}) as Promise<MockReferenceModule>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockReferenceModule {
    return super.attach(address) as MockReferenceModule;
  }
  connect(signer: Signer): MockReferenceModule__factory {
    return super.connect(signer) as MockReferenceModule__factory;
  }
  static readonly contractName: "MockReferenceModule";
  public readonly contractName: "MockReferenceModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockReferenceModuleInterface {
    return new utils.Interface(_abi) as MockReferenceModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockReferenceModule {
    return new Contract(address, _abi, signerOrProvider) as MockReferenceModule;
  }
}

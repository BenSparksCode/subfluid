/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockLensHubV2, MockLensHubV2Interface } from "../MockLensHubV2";

const _abi = [
  {
    inputs: [],
    name: "CannotInitImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerOrApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "burnWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAdditionalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      {
        internalType: "enum DataTypes.ProtocolState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintTimestampOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "permitForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
    ],
    name: "setAdditionalValue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sigNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "mintTimestamp",
            type: "uint96",
          },
        ],
        internalType: "struct IERC721Time.TokenData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040526000600b5534801561001557600080fd5b50306080526080516122e9610035600039600061106001526122e96000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636352211e11610104578063b88d4fde116100a2578063e985e9c511610071578063e985e9c5146103fb578063ed24911d14610437578063f990ccd71461043f578063fe4b84df1461045f57600080fd5b8063b88d4fde1461037d578063c0da9bcd14610390578063c87b56dd146103d5578063dd69cdb1146103e857600080fd5b806385e922e7116100de57806385e922e71461034757806389028a131461034f57806395d89b4114610362578063a22cb4651461036a57600080fd5b80636352211e1461030e57806370a08231146103215780637ef67f991461033457600080fd5b80632f745c5911610171578063493830a41161014b578063493830a4146102c25780634f558e79146102d55780634f6ccce7146102e857806350ddf35c146102fb57600080fd5b80632f745c591461028957806342842e0e1461029c57806342966c68146102af57600080fd5b8063095ea7b3116101ad578063095ea7b31461023c57806318160ddd146102515780631865c57d1461026357806323b872dd1461027657600080fd5b806301ffc9a7146101d457806306fdde03146101fc578063081812fc14610211575b600080fd5b6101e76101e2366004611d76565b610472565b60405190151581526020015b60405180910390f35b6102046104b6565b6040516101f39190611deb565b61022461021f366004611dfe565b610548565b6040516001600160a01b0390911681526020016101f3565b61024f61024a366004611e33565b6105e2565b005b6008545b6040519081526020016101f3565b600c5460ff166040516101f39190611e5d565b61024f610284366004611e85565b610714565b610255610297366004611e33565b61079b565b61024f6102aa366004611e85565b610843565b61024f6102bd366004611dfe565b61085e565b61024f6102d0366004611dfe565b601855565b6101e76102e3366004611dfe565b6108aa565b6102556102f6366004611dfe565b6108c9565b610255610309366004611dfe565b61096d565b61022461031c366004611dfe565b610a18565b61025561032f366004611ec1565b610aa3565b61024f610342366004611ef4565b610b3d565b601854610255565b61024f61035d366004611f41565b610c23565b610204610ce8565b61024f610378366004611f96565b610cf7565b61024f61038b366004611fdf565b610d5f565b6103a361039e366004611dfe565b610de7565b6040805182516001600160a01b031681526020928301516bffffffffffffffffffffffff1692810192909252016101f3565b6102046103e3366004611dfe565b610ec9565b61024f6103f63660046120bb565b610fbf565b6101e76104093660046120df565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61025561104d565b61025561044d366004611ec1565b600a6020526000908152604090205481565b61024f61046d366004611dfe565b61105c565b60006001600160e01b031982167f780e9d630000000000000000000000000000000000000000000000000000000014806104b057506104b082611104565b92915050565b6060600080546104c590612109565b80601f01602080910402602001604051908101604052809291908181526020018280546104f190612109565b801561053e5780601f106105135761010080835404028352916020019161053e565b820191906000526020600020905b81548152906001019060200180831161052157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105c65760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105ed82610a18565b9050806001600160a01b0316836001600160a01b031614156106775760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016105bd565b336001600160a01b038216148061069357506106938133610409565b6107055760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105bd565b61070f838361119f565b505050565b61071e338261121a565b6107905760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016105bd565b61070f838383611311565b60006107a683610aa3565b821061081a5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e647300000000000000000000000000000000000000000060648201526084016105bd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61070f83838360405180602001604052806000815250610d5f565b610868338261121a565b61089e576040517fdb1453ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a7816114f6565b50565b6000818152600260205260408120546001600160a01b031615156104b0565b60006108d460085490565b82106109485760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084016105bd565b6008828154811061095b5761095b61213e565b90600052602060002001549050919050565b600081815260026020526040812054600160a01b90046bffffffffffffffffffffffff1680610a045760405162461bcd60e51b815260206004820152603260248201527f4552433732313a206d696e742074696d657374616d7020717565727920666f7260448201527f206e6f6e6578697374656e7420746f6b656e000000000000000000000000000060648201526084016105bd565b6bffffffffffffffffffffffff1692915050565b6000818152600260205260408120546001600160a01b0316806104b05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016105bd565b60006001600160a01b038216610b215760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016105bd565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b038316610b64576040516307eb16dd60e21b815260040160405180910390fd5b6000610b6f83610a18565b6001600160a01b038181166000908152600a602090815260409182902080546001810190915582517f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad9281019290925292881691810191909152606080820187905260808201929092529084013560a0820152909150610c1390610c0c9060c0015b60405160208183030381529060405280519060200120611592565b82846115f7565b610c1d848461119f565b50505050565b6001600160a01b038316610c4a576040516307eb16dd60e21b815260040160405180910390fd5b6001600160a01b038481166000818152600a602090815260409182902080546001810190915582517f47ab88482c90e4bb94b82a947ae78fa91fb25de1469ab491f4c15b9a0a2677ee9281019290925291810192909252918516606080830191909152841515608083015260a08201929092529082013560c0820152610cdd90610cd69060e001610bf1565b85836115f7565b610c1d848484611707565b6060600180546104c590612109565b6001600160a01b038216331415610d505760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105bd565b610d5b338383611707565b5050565b610d69338361121a565b610ddb5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016105bd565b610c1d84848484611774565b60408051808201909152600080825260208201526000828152600260205260409020546001600160a01b0316610e855760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a20746f6b656e206461746120717565727920666f72206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016105bd565b506000908152600260209081526040918290208251808401909352546001600160a01b0381168352600160a01b90046bffffffffffffffffffffffff169082015290565b6000818152600260205260409020546060906001600160a01b0316610f565760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016105bd565b6000610f6d60408051602081019091526000815290565b90506000815111610f8d5760405180602001604052806000815250610fb8565b80610f97846117fd565b604051602001610fa8929190612154565b6040516020818303038152906040525b9392505050565b6000610fca83610a18565b6001600160a01b0381166000908152600a602090815260409182902080546001810190915582517f108ccda6d7331b00561a3eea66a2ae331622356585681c62731e4a01aae2261a9281019290925291810186905260608082019290925290840135608082015290915061104490610c0c9060a001610bf1565b61070f836114f6565b600061105761192f565b905090565b60027f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163014156110c1576040517f971d041400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b5481116110fc576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600b55601855565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061116757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104b057507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146104b0565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03841690811790915581906111e182610a18565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166112935760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105bd565b600061129e83610a18565b9050806001600160a01b0316846001600160a01b031614806112d95750836001600160a01b03166112ce84610548565b6001600160a01b0316145b8061130957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661132482610a18565b6001600160a01b0316146113a05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016105bd565b6001600160a01b03821661141b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105bd565b6114268383836119c4565b61143160008261119f565b6001600160a01b038316600090815260036020526040812080546001929061145a908490612199565b90915550506001600160a01b03821660009081526003602052604081208054600192906114889084906121b0565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061150182610a18565b905061150f816000846119c4565b61151a60008361119f565b6001600160a01b0381166000908152600360205260408120805460019290611543908490612199565b9091555050600082815260026020526040808220829055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008061159d61192f565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101919091526042810184905260620160408051601f1981840301815291905280516020909101209392505050565b4281606001351015611635576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018461164760208501856121c8565b604080516000815260208181018084529490945260ff9092168282015291850135606082015290840135608082015260a0016020604051602081039080840390855afa15801561169b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615806116d05750826001600160a01b0316816001600160a01b031614155b15610c1d576040517f37e8456b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61177f848484611311565b61178b84848484611a7c565b610c1d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016105bd565b60608161183d57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156118675780611851816121eb565b91506118609050600a8361221c565b9150611841565b60008167ffffffffffffffff81111561188257611882611fc9565b6040519080825280601f01601f1916602001820160405280156118ac576020820181803683370190505b5090505b8415611309576118c1600183612199565b91506118ce600a86612230565b6118d99060306121b0565b60f81b8183815181106118ee576118ee61213e565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611928600a8661221c565b94506118b0565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61195a6104b6565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038316611a1f57611a1a81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611a42565b816001600160a01b0316836001600160a01b031614611a4257611a428382611bd0565b6001600160a01b038216611a595761070f81611c6d565b826001600160a01b0316826001600160a01b03161461070f5761070f8282611d1c565b60006001600160a01b0384163b15611bc557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ac0903390899088908890600401612244565b6020604051808303816000875af1925050508015611afb575060408051601f3d908101601f19168201909252611af891810190612280565b60015b611bab573d808015611b29576040519150601f19603f3d011682016040523d82523d6000602084013e611b2e565b606091505b508051611ba35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e746572000000000000000000000000000060648201526084016105bd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611309565b506001949350505050565b60006001611bdd84610aa3565b611be79190612199565b600083815260076020526040902054909150808214611c3a576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611c7f90600190612199565b60008381526009602052604081205460088054939450909284908110611ca757611ca761213e565b906000526020600020015490508060088381548110611cc857611cc861213e565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611d0057611d0061229d565b6001900381819060005260206000200160009055905550505050565b6000611d2783610aa3565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146108a757600080fd5b600060208284031215611d8857600080fd5b8135610fb881611d60565b60005b83811015611dae578181015183820152602001611d96565b83811115610c1d5750506000910152565b60008151808452611dd7816020860160208601611d93565b601f01601f19169290920160200192915050565b602081526000610fb86020830184611dbf565b600060208284031215611e1057600080fd5b5035919050565b80356001600160a01b0381168114611e2e57600080fd5b919050565b60008060408385031215611e4657600080fd5b611e4f83611e17565b946020939093013593505050565b6020810160038310611e7f57634e487b7160e01b600052602160045260246000fd5b91905290565b600080600060608486031215611e9a57600080fd5b611ea384611e17565b9250611eb160208501611e17565b9150604084013590509250925092565b600060208284031215611ed357600080fd5b610fb882611e17565b600060808284031215611eee57600080fd5b50919050565b600080600060c08486031215611f0957600080fd5b611f1284611e17565b925060208401359150611f288560408601611edc565b90509250925092565b80358015158114611e2e57600080fd5b60008060008060e08587031215611f5757600080fd5b611f6085611e17565b9350611f6e60208601611e17565b9250611f7c60408601611f31565b9150611f8b8660608701611edc565b905092959194509250565b60008060408385031215611fa957600080fd5b611fb283611e17565b9150611fc060208401611f31565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611ff557600080fd5b611ffe85611e17565b935061200c60208601611e17565b925060408501359150606085013567ffffffffffffffff8082111561203057600080fd5b818701915087601f83011261204457600080fd5b81358181111561205657612056611fc9565b604051601f8201601f19908116603f0116810190838211818310171561207e5761207e611fc9565b816040528281528a602084870101111561209757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060a083850312156120ce57600080fd5b82359150611fc08460208501611edc565b600080604083850312156120f257600080fd5b6120fb83611e17565b9150611fc060208401611e17565b600181811c9082168061211d57607f821691505b60208210811415611eee57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008351612166818460208801611d93565b83519083019061217a818360208801611d93565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156121ab576121ab612183565b500390565b600082198211156121c3576121c3612183565b500190565b6000602082840312156121da57600080fd5b813560ff81168114610fb857600080fd5b60006000198214156121ff576121ff612183565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261222b5761222b612206565b500490565b60008261223f5761223f612206565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526122766080830184611dbf565b9695505050505050565b60006020828403121561229257600080fd5b8151610fb881611d60565b634e487b7160e01b600052603160045260246000fdfea26469706673582212202200371f5a39a5f03d4593a4ddf83043e249dcb85ffd5a7defa6649f493681dc64736f6c634300080a0033";

type MockLensHubV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLensHubV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLensHubV2__factory extends ContractFactory {
  constructor(...args: MockLensHubV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MockLensHubV2";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockLensHubV2> {
    return super.deploy(overrides || {}) as Promise<MockLensHubV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockLensHubV2 {
    return super.attach(address) as MockLensHubV2;
  }
  connect(signer: Signer): MockLensHubV2__factory {
    return super.connect(signer) as MockLensHubV2__factory;
  }
  static readonly contractName: "MockLensHubV2";
  public readonly contractName: "MockLensHubV2";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLensHubV2Interface {
    return new utils.Interface(_abi) as MockLensHubV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLensHubV2 {
    return new Contract(address, _abi, signerOrProvider) as MockLensHubV2;
  }
}

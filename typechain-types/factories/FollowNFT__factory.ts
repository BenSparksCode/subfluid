/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FollowNFT, FollowNFTInterface } from "../FollowNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BlockNumberInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "Initialized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "NotOwnerOrApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "SignatureInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDoesNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "burnWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getDelegatedSupplyByBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPowerByBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mintTimestampOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct DataTypes.EIP712Signature",
        name: "sig",
        type: "tuple",
      },
    ],
    name: "permitForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sigNonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenDataOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "mintTimestamp",
            type: "uint96",
          },
        ],
        internalType: "struct IERC721Time.TokenData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162002f8f38038062002f8f83398101604081905262000034916200007b565b6001600160a01b0381166200005c576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03166080526012805460ff19166001179055620000ad565b6000602082840312156200008e57600080fd5b81516001600160a01b0381168114620000a657600080fd5b9392505050565b608051612e9c620000f3600039600081816103c10152818161053501528181610c0e01528181610f0b0152818161126101528181611f5301526120380152612e9c6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806370a082311161010f578063c0da9bcd116100a2578063e985e9c511610071578063e985e9c514610474578063ed24911d146104b0578063f990ccd7146104b8578063fe4b84df146104d857600080fd5b8063c0da9bcd146103f6578063c87b56dd1461043b578063dd69cdb11461044e578063df8d80711461046157600080fd5b806395d89b41116100de57806395d89b41146103a1578063a22cb465146103a9578063a4c52b86146103bc578063b88d4fde146103e357600080fd5b806370a08231146103555780637ef67f991461036857806389028a131461037b5780638fca0d411461038e57600080fd5b806342842e0e1161018757806350ddf35c1161015657806350ddf35c146103095780635c19a95c1461031c5780636352211e1461032f5780636a6278421461034257600080fd5b806342842e0e146102bd57806342966c68146102d05780634f558e79146102e35780634f6ccce7146102f657600080fd5b806318160ddd116101c357806318160ddd1461027257806323b872dd146102845780632c994dc8146102975780632f745c59146102aa57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b61020861020336600461285a565b6104eb565b60405190151581526020015b60405180910390f35b61022561052f565b60405161021491906128cf565b6102456102403660046128e2565b610627565b6040516001600160a01b039091168152602001610214565b61027061026b366004612910565b6106c1565b005b6008545b604051908152602001610214565b61027061029236600461293c565b6107f3565b6102766102a5366004612910565b61087a565b6102766102b8366004612910565b6108ef565b6102706102cb36600461293c565b610997565b6102706102de3660046128e2565b6109b2565b6102086102f13660046128e2565b6109fe565b6102766103043660046128e2565b610a1d565b6102766103173660046128e2565b610ac1565b61027061032a36600461297d565b610b6c565b61024561033d3660046128e2565b610b76565b61027661035036600461297d565b610c01565b61027661036336600461297d565b610c7a565b6102706103763660046129b2565b610d14565b610270610389366004612a06565b610dfa565b61027661039c3660046128e2565b610ebf565b610225610f05565b6102706103b7366004612a5f565b61100b565b6102457f000000000000000000000000000000000000000000000000000000000000000081565b6102706103f1366004612b03565b611073565b6104096104043660046128e2565b6110fb565b6040805182516001600160a01b031681526020928301516bffffffffffffffffffffffff169281019290925201610214565b6102256104493660046128e2565b6111dd565b61027061045c366004612bb2565b6112d8565b61027061046f366004612bd6565b611366565b610208610482366004612c15565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102766113fb565b6102766104c636600461297d565b600a6020526000908152604090205481565b6102706104e63660046128e2565b61140a565b60006001600160e01b031982167f780e9d63000000000000000000000000000000000000000000000000000000001480610529575061052982611498565b92915050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ec81d1946010546040518263ffffffff1660e01b815260040161058391815260200190565b600060405180830381865afa1580156105a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105c89190810190612c4e565b9050806040518060400160405280600981526020017f2d466f6c6c6f7765720000000000000000000000000000000000000000000000815250604051602001610612929190612cc5565b60405160208183030381529060405291505090565b6000818152600260205260408120546001600160a01b03166106a55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106cc82610b76565b9050806001600160a01b0316836001600160a01b031614156107565760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161069c565b336001600160a01b038216148061077257506107728133610482565b6107e45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161069c565b6107ee8383611533565b505050565b6107fd33826115ae565b61086f5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161069c565b6107ee8383836116a1565b60004382111561089c5760405162ac8e9f60e61b815260040160405180910390fd5b6001600160a01b0383166000908152600d6020526040902054806108c4576000915050610529565b6001600160a01b0384166000908152600b602052604090206108e7908483611886565b949350505050565b60006108fa83610c7a565b821061096e5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161069c565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6107ee83838360405180602001604052806000815250611073565b6109bc33826115ae565b6109f2576040517fdb1453ce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109fb816119b6565b50565b6000818152600260205260408120546001600160a01b03161515610529565b6000610a2860085490565b8210610a9c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161069c565b60088281548110610aaf57610aaf612cf4565b90600052602060002001549050919050565b600081815260026020526040812054600160a01b90046bffffffffffffffffffffffff1680610b585760405162461bcd60e51b815260206004820152603260248201527f4552433732313a206d696e742074696d657374616d7020717565727920666f7260448201527f206e6f6e6578697374656e7420746f6b656e0000000000000000000000000000606482015260840161069c565b6bffffffffffffffffffffffff1692915050565b6109fb3382611a52565b6000818152600260205260408120546001600160a01b0316806105295760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161069c565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c65576040517f9de9741800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60118054600101908190556105298382611aa6565b60006001600160a01b038216610cf85760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161069c565b506001600160a01b031660009081526003602052604090205490565b6001600160a01b038316610d3b576040516307eb16dd60e21b815260040160405180910390fd5b6000610d4683610b76565b6001600160a01b038181166000908152600a602090815260409182902080546001810190915582517f49ecf333e5b8c95c40fdafc95c1ad136e8914a8fb55e9dc8bb01eaa83a2df9ad9281019290925292881691810191909152606080820187905260808201929092529084013560a0820152909150610dea90610de39060c0015b60405160208183030381529060405280519060200120611bfc565b8284611c61565b610df48484611533565b50505050565b6001600160a01b038316610e21576040516307eb16dd60e21b815260040160405180910390fd5b6001600160a01b038481166000818152600a602090815260409182902080546001810190915582517f47ab88482c90e4bb94b82a947ae78fa91fb25de1469ab491f4c15b9a0a2677ee9281019290925291810192909252918516606080830191909152841515608083015260a08201929092529082013560c0820152610eb490610ead9060e001610dc8565b8583611c61565b610df4848484611d71565b600043821115610ee15760405162ac8e9f60e61b815260040160405180910390fd5b600f5480610ef25750600092915050565b610efe600e8483611886565b9392505050565b606060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ec81d1946010546040518263ffffffff1660e01b8152600401610f5991815260200190565b600060405180830381865afa158015610f76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f9e9190810190612c4e565b90506000610fab82612d0a565b9050806040518060400160405280600381526020017f2d466c0000000000000000000000000000000000000000000000000000000000815250604051602001610ff5929190612d42565b6040516020818303038152906040529250505090565b6001600160a01b0382163314156110645760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161069c565b61106f338383611d71565b5050565b61107d33836115ae565b6110ef5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161069c565b610df484848484611dde565b60408051808201909152600080825260208201526000828152600260205260409020546001600160a01b03166111995760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a20746f6b656e206461746120717565727920666f72206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161069c565b506000908152600260209081526040918290208251808401909352546001600160a01b0381168352600160a01b90046bffffffffffffffffffffffff169082015290565b6000818152600260205260409020546060906001600160a01b031661122e576040517fceea21b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6010546040517f374c947300000000000000000000000000000000000000000000000000000000815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063374c947390602401600060405180830381865afa1580156112b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105299190810190612c4e565b60006112e383610b76565b6001600160a01b0381166000908152600a602090815260409182902080546001810190915582517f108ccda6d7331b00561a3eea66a2ae331622356585681c62731e4a01aae2261a9281019290925291810186905260608082019290925290840135608082015290915061135d90610de39060a001610dc8565b6107ee836119b6565b6001600160a01b038381166000818152600a602090815260409182902080546001810190915582517fb8f190a57772800093f4e2b186099eb4f1df0ed7f5e2791e89a4a07678e0aeff928101929092529181019290925291841660608083019190915260808201929092529082013560a08201526113f1906113ea9060c001610dc8565b8483611c61565b6107ee8383611a52565b6000611405611e67565b905090565b60125460ff1615611447576040517f5daa87a000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6012805460ff19166001179055601081905560405181907faec15127df11a6b562c87d31bcb8f4cd2f0cf57fb9b663d6334abf41fea94d959061148d9042815260200190565b60405180910390a250565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806114fb57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061052957507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610529565b6000818152600460205260409020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b038416908117909155819061157582610b76565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166116275760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161069c565b600061163283610b76565b9050806001600160a01b0316846001600160a01b0316148061166d5750836001600160a01b031661166284610627565b6001600160a01b0316145b806108e757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166108e7565b826001600160a01b03166116b482610b76565b6001600160a01b0316146117305760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015260840161069c565b6001600160a01b0382166117ab5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161069c565b6117b6838383611efc565b6117c1600082611533565b6001600160a01b03831660009081526003602052604081208054600192906117ea908490612d88565b90915550506001600160a01b0382166000908152600360205260408120805460019290611818908490612d9f565b9091555050600081815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000198101600081815260208590526040812054909182916001600160801b031685106118d557600090815260208690526040902054600160801b90046001600160801b03169150610efe9050565b6000828152602087905260409020546001600160801b03168510156118ff57600092505050610efe565b8181111561198d576002828203048103600081815260208881526040918290208251808401909352546001600160801b03808216808552600160801b909204169183019190915287141561196557602001516001600160801b03169350610efe92505050565b80516001600160801b031687111561197f57819350611986565b6001820392505b50506118ff565b50600090815260208590526040902054600160801b90046001600160801b031690509392505050565b60006119c182610b76565b90506119cf81600084611efc565b6119da600083611533565b6001600160a01b0381166000908152600360205260408120805460019290611a03908490612d88565b9091555050600082815260026020526040808220829055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6000611a5d83610c7a565b6001600160a01b038085166000908152600c60205260409020805485831673ffffffffffffffffffffffffffffffffffffffff1982161790915591925016610df481848461213a565b6001600160a01b038216611afc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161069c565b6000818152600260205260409020546001600160a01b031615611b615760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161069c565b611b6d60008383611efc565b6001600160a01b0382166000908152600360205260408120805460019290611b96908490612d9f565b90915550506000818152600260205260408082206001600160a01b038516600160a01b426bffffffffffffffffffffffff1602811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600080611c07611e67565b6040517f1901000000000000000000000000000000000000000000000000000000000000602082015260228101919091526042810184905260620160408051601f1981840301815291905280516020909101209392505050565b4281606001351015611c9f576040517f0819bdcd00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600184611cb16020850185612db7565b604080516000815260208181018084529490945260ff9092168282015291850135606082015290840135608082015260a0016020604051602081039080840390855afa158015611d05573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580611d3a5750826001600160a01b0316816001600160a01b031614155b15610df4576040517f37e8456b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611de98484846116a1565b611df58484848461231d565b610df45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161069c565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611e9261052f565b80516020918201206040805192830193909352918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b038084166000908152600c60205260408082205485841683528183205460105492517fd923d20c0000000000000000000000000000000000000000000000000000000081529185169490811693927f00000000000000000000000000000000000000000000000000000000000000009091169163d923d20c91611f8c9160040190815260200190565b602060405180830381865afa158015611fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fcd9190612dda565b9050611fdb8383600161213a565b611fe6868686612471565b6010546040517fbdfdd4bc0000000000000000000000000000000000000000000000000000000081526004810191909152602481018590526001600160a01b03878116604483015286811660648301527f0000000000000000000000000000000000000000000000000000000000000000169063bdfdd4bc90608401600060405180830381600087803b15801561207c57600080fd5b505af1158015612090573d6000803e3d6000fd5b505050506001600160a01b03811615612132576010546040517f3cb22cc400000000000000000000000000000000000000000000000000000000815260048101919091526001600160a01b038781166024830152868116604483015260648201869052821690633cb22cc490608401600060405180830381600087803b15801561211957600080fd5b505af115801561212d573d6000803e3d6000fd5b505050505b505050505050565b6001600160a01b03831615806121ea576001600160a01b0384166000908152600d6020908152604080832054600b83528184206000198201855290925290912054600160801b90046001600160801b0316838103612199878285612529565b806001600160801b0316876001600160a01b03167fd9a6070174f4ccca76ed4896432e9a090b16e07e8fe27f275f50b33500b98e52426040516121de91815260200190565b60405180910390a35050505b6001600160a01b038316156122db57801561223757600f5460001981016000908152600e6020526040902054600160801b90046001600160801b03168381016122338184612608565b5050505b6001600160a01b0383166000908152600d6020908152604080832054600b83528184206000198201855290925290912054600160801b90046001600160801b0316838101612286868285612529565b806001600160801b0316866001600160a01b03167fd9a6070174f4ccca76ed4896432e9a090b16e07e8fe27f275f50b33500b98e52426040516122cb91815260200190565b60405180910390a3505050610df4565b80610df457600f5460001981016000908152600e6020526040902054600160801b90046001600160801b03168381036123148184612608565b50505050505050565b60006001600160a01b0384163b1561246657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612361903390899088908890600401612df7565b6020604051808303816000875af192505050801561239c575060408051601f3d908101601f1916820190925261239991810190612e33565b60015b61244c573d8080156123ca576040519150601f19603f3d011682016040523d82523d6000602084013e6123cf565b606091505b5080516124445760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161069c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108e7565b506001949350505050565b6001600160a01b0383166124cc576124c781600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6124ef565b816001600160a01b0316836001600160a01b0316146124ef576124ef83826126b4565b6001600160a01b038216612506576107ee81612751565b826001600160a01b0316826001600160a01b0316146107ee576107ee8282612800565b6001600160a01b0383166000908152600b6020526040902043908215801590612570575060001983016000908152602082905260409020546001600160801b038381169116145b156125a5576000198301600090815260208290526040902080546001600160801b03808716600160801b029116179055612601565b6040805180820182526001600160801b03808516825286811660208084019182526000888152868252858120945192518416600160801b0292909316919091179092556001600160a01b0388168152600d909152206001840190555b5050505050565b438115801590612636575060001982016000908152600e60205260409020546001600160801b038281169116145b1561266b5760001982016000908152600e6020526040902080546001600160801b03808616600160801b029116179055505050565b6040805180820182526001600160801b03928316815293821660208086019182526000858152600e90915291909120935190518216600160801b02911617909155600101600f55565b600060016126c184610c7a565b6126cb9190612d88565b60008381526007602052604090205490915080821461271e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061276390600190612d88565b6000838152600960205260408120546008805493945090928490811061278b5761278b612cf4565b9060005260206000200154905080600883815481106127ac576127ac612cf4565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806127e4576127e4612e50565b6001900381819060005260206000200160009055905550505050565b600061280b83610c7a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146109fb57600080fd5b60006020828403121561286c57600080fd5b8135610efe81612844565b60005b8381101561289257818101518382015260200161287a565b83811115610df45750506000910152565b600081518084526128bb816020860160208601612877565b601f01601f19169290920160200192915050565b602081526000610efe60208301846128a3565b6000602082840312156128f457600080fd5b5035919050565b6001600160a01b03811681146109fb57600080fd5b6000806040838503121561292357600080fd5b823561292e816128fb565b946020939093013593505050565b60008060006060848603121561295157600080fd5b833561295c816128fb565b9250602084013561296c816128fb565b929592945050506040919091013590565b60006020828403121561298f57600080fd5b8135610efe816128fb565b6000608082840312156129ac57600080fd5b50919050565b600080600060c084860312156129c757600080fd5b83356129d2816128fb565b9250602084013591506129e8856040860161299a565b90509250925092565b80358015158114612a0157600080fd5b919050565b60008060008060e08587031215612a1c57600080fd5b8435612a27816128fb565b93506020850135612a37816128fb565b9250612a45604086016129f1565b9150612a54866060870161299a565b905092959194509250565b60008060408385031215612a7257600080fd5b8235612a7d816128fb565b9150612a8b602084016129f1565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612ad357612ad3612a94565b604052919050565b600067ffffffffffffffff821115612af557612af5612a94565b50601f01601f191660200190565b60008060008060808587031215612b1957600080fd5b8435612b24816128fb565b93506020850135612b34816128fb565b925060408501359150606085013567ffffffffffffffff811115612b5757600080fd5b8501601f81018713612b6857600080fd5b8035612b7b612b7682612adb565b612aaa565b818152886020838501011115612b9057600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060a08385031215612bc557600080fd5b82359150612a8b846020850161299a565b600080600060c08486031215612beb57600080fd5b8335612bf6816128fb565b92506020840135612c06816128fb565b91506129e8856040860161299a565b60008060408385031215612c2857600080fd5b8235612c33816128fb565b91506020830135612c43816128fb565b809150509250929050565b600060208284031215612c6057600080fd5b815167ffffffffffffffff811115612c7757600080fd5b8201601f81018413612c8857600080fd5b8051612c96612b7682612adb565b818152856020838501011115612cab57600080fd5b612cbc826020830160208601612877565b95945050505050565b60008351612cd7818460208801612877565b835190830190612ceb818360208801612877565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b6000815160208301516001600160e01b031980821693506004831015612d3a5780818460040360031b1b83161693505b505050919050565b6001600160e01b03198316815260008251612d64816004850160208701612877565b919091016004019392505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612d9a57612d9a612d72565b500390565b60008219821115612db257612db2612d72565b500190565b600060208284031215612dc957600080fd5b813560ff81168114610efe57600080fd5b600060208284031215612dec57600080fd5b8151610efe816128fb565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612e2960808301846128a3565b9695505050505050565b600060208284031215612e4557600080fd5b8151610efe81612844565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205d4bea3cea6ad275c0319449b56fbe7c349941e53ec3a76454ab2db15e7acd9864736f6c634300080a0033";

type FollowNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FollowNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FollowNFT__factory extends ContractFactory {
  constructor(...args: FollowNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FollowNFT";
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FollowNFT> {
    return super.deploy(hub, overrides || {}) as Promise<FollowNFT>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): FollowNFT {
    return super.attach(address) as FollowNFT;
  }
  connect(signer: Signer): FollowNFT__factory {
    return super.connect(signer) as FollowNFT__factory;
  }
  static readonly contractName: "FollowNFT";
  public readonly contractName: "FollowNFT";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FollowNFTInterface {
    return new utils.Interface(_abi) as FollowNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FollowNFT {
    return new Contract(address, _abi, signerOrProvider) as FollowNFT;
  }
}

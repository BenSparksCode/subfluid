/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ApprovalFollowModule,
  ApprovalFollowModuleInterface,
} from "../ApprovalFollowModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FollowNotApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "NotProfileOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "toApprove",
        type: "bool[]",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "followModuleTransferHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeFollowModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "profileOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "toCheck",
        type: "address",
      },
    ],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "profileOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "toCheck",
        type: "address[]",
      },
    ],
    name: "isApprovedArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "isFollowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processFollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161107c38038061107c83398101604081905261002f916100a0565b806001600160a01b038116610057576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a250506100d0565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b608051610f6761011560003960008181610145015281816101bd01528181610214015281816103650152818161050b0152818161056201526107040152610f676000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639713958a1161005b5780639713958a14610120578063a4c52b8614610140578063b47d869b1461017f578063f16466cf1461019257600080fd5b80630e096ae11461008d5780633cb22cc4146100a2578063451c3d0c146100b657806351615fee146100de575b600080fd5b6100a061009b366004610a22565b6101b2565b005b6100a06100b0366004610a7e565b50505050565b6100c96100c4366004610ac6565b610329565b60405190151581526020015b60405180910390f35b6100c96100ec366004610afe565b6001600160a01b03928316600090815260208181526040808320948352938152838220929094168152925290205460ff1690565b61013361012e366004610b40565b6104fe565b6040516100d59190610b8c565b6101677f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100d5565b6100a061018d366004610c26565b6106b2565b6101a56101a0366004610ca0565b6108bb565b6040516100d59190610cf0565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101fb576040516313bd2e8360e31b815260040160405180910390fd5b6040516331a9108f60e11b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102879190610d2a565b6001600160a01b038082166000908152602081815260408083208984528252808320938a168352929052205490915060ff166102ef576040517fb3c1497e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b0390811660009081526020818152604080832096835295815285822096909216815294905250509020805460ff19169055565b6040517fa9ec65630000000000000000000000000000000000000000000000000000000081526004810184905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9ec656390602401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190610d2a565b90506001600160a01b0381166103ea5760009150506104f7565b821561046d576040516331a9108f60e11b8152600481018490526001600160a01b038086169190831690636352211e90602401602060405180830381865afa15801561043a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045e9190610d2a565b6001600160a01b0316146104f3565b6040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301528216906370a0823190602401602060405180830381865afa1580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190610d47565b15155b9150505b9392505050565b6060336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610549576040516313bd2e8360e31b815260040160405180910390fd5b6040516331a9108f60e11b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa1580156105b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d59190610d2a565b905082156106725760006105eb84860186610d76565b805190915060005b8181101561066e576001600160a01b0384166000908152602081815260408083208b8452909152812084516001929086908590811061063457610634610e3b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790556001016105f3565b5050505b83838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509298975050505050505050565b8281146106eb576040517f48be0eb300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040516331a9108f60e11b8152600481018690526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa158015610753573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107779190610d2a565b9050336001600160a01b038216146107bb576040517ff194fae500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8360005b81811015610867578484828181106107d9576107d9610e3b565b90506020020160208101906107ee9190610e61565b6001600160a01b0384166000908152602081815260408083208c845290915281209089898581811061082257610822610e3b565b90506020020160208101906108379190610e7c565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790556001016107bf565b5086826001600160a01b03167fc67fc3972da5d6434ab7b796ba133c240d40ee4e69129963c5aa0f2a6f7c3ad688888888426040516108aa959493929190610e99565b60405180910390a350505050505050565b606060008267ffffffffffffffff8111156108d8576108d8610d60565b604051908082528060200260200182016040528015610901578160200160208202803683370190505b5090508260005b818110156109a5576001600160a01b0388166000908152602081815260408083208a845290915281209087878481811061094457610944610e3b565b90506020020160208101906109599190610e7c565b6001600160a01b03168152602081019190915260400160002054835160ff9091169084908390811061098d5761098d610e3b565b91151560209283029190910190910152600101610908565b50909695505050505050565b6001600160a01b03811681146109c657600080fd5b50565b80356109d4816109b1565b919050565b60008083601f8401126109eb57600080fd5b50813567ffffffffffffffff811115610a0357600080fd5b602083019150836020828501011115610a1b57600080fd5b9250929050565b60008060008060608587031215610a3857600080fd5b8435610a43816109b1565b935060208501359250604085013567ffffffffffffffff811115610a6657600080fd5b610a72878288016109d9565b95989497509550505050565b60008060008060808587031215610a9457600080fd5b843593506020850135610aa6816109b1565b92506040850135610ab6816109b1565b9396929550929360600135925050565b600080600060608486031215610adb57600080fd5b833592506020840135610aed816109b1565b929592945050506040919091013590565b600080600060608486031215610b1357600080fd5b8335610b1e816109b1565b9250602084013591506040840135610b35816109b1565b809150509250925092565b600080600060408486031215610b5557600080fd5b83359250602084013567ffffffffffffffff811115610b7357600080fd5b610b7f868287016109d9565b9497909650939450505050565b600060208083528351808285015260005b81811015610bb957858101830151858201604001528201610b9d565b81811115610bcb576000604083870101525b50601f01601f1916929092016040019392505050565b60008083601f840112610bf357600080fd5b50813567ffffffffffffffff811115610c0b57600080fd5b6020830191508360208260051b8501011115610a1b57600080fd5b600080600080600060608688031215610c3e57600080fd5b85359450602086013567ffffffffffffffff80821115610c5d57600080fd5b610c6989838a01610be1565b90965094506040880135915080821115610c8257600080fd5b50610c8f88828901610be1565b969995985093965092949392505050565b60008060008060608587031215610cb657600080fd5b8435610cc1816109b1565b935060208501359250604085013567ffffffffffffffff811115610ce457600080fd5b610a7287828801610be1565b6020808252825182820181905260009190848201906040850190845b818110156109a5578351151583529284019291840191600101610d0c565b600060208284031215610d3c57600080fd5b81516104f7816109b1565b600060208284031215610d5957600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215610d8957600080fd5b823567ffffffffffffffff80821115610da157600080fd5b818501915085601f830112610db557600080fd5b813581811115610dc757610dc7610d60565b8060051b604051601f19603f83011681018181108582111715610dec57610dec610d60565b604052918252848201925083810185019188831115610e0a57600080fd5b938501935b82851015610e2f57610e20856109c9565b84529385019392850192610e0f565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b803580151581146109d457600080fd5b600060208284031215610e7357600080fd5b6104f782610e51565b600060208284031215610e8e57600080fd5b81356104f7816109b1565b6060808252810185905260008660808301825b88811015610edc578235610ebf816109b1565b6001600160a01b0316825260209283019290910190600101610eac565b5083810360208581019190915286825291508690820160005b87811015610f1a57610f0683610e51565b151582529183019190830190600101610ef5565b50809350505050826040830152969550505050505056fea2646970667358221220e2e9d523f6bdc785178cd1d6cff13da649c296d52ccf3056feb4205fbe9f7ee564736f6c634300080a0033";

type ApprovalFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApprovalFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ApprovalFollowModule__factory extends ContractFactory {
  constructor(...args: ApprovalFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ApprovalFollowModule";
  }

  deploy(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ApprovalFollowModule> {
    return super.deploy(hub, overrides || {}) as Promise<ApprovalFollowModule>;
  }
  getDeployTransaction(
    hub: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, overrides || {});
  }
  attach(address: string): ApprovalFollowModule {
    return super.attach(address) as ApprovalFollowModule;
  }
  connect(signer: Signer): ApprovalFollowModule__factory {
    return super.connect(signer) as ApprovalFollowModule__factory;
  }
  static readonly contractName: "ApprovalFollowModule";
  public readonly contractName: "ApprovalFollowModule";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApprovalFollowModuleInterface {
    return new utils.Interface(_abi) as ApprovalFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ApprovalFollowModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ApprovalFollowModule;
  }
}
